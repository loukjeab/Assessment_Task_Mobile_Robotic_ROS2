<?xml version="1.0"?>
<robot name="myrobot" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:property name="PI" value="3.1415926535897931"/>

  <!-- material -->
  
  <material name="blue">
    <color rgba="0 0 0.8 1"/>
  </material>
  
  <material name="red">
    <color rgba="1 0 0 1"/>
  </material>
  
  <material name="black">
    <color rgba="0 0 0 0.8"/>
  </material>
  
  <material name="white">
    <color rgba="1 1 1 1"/>
  </material>
  
  <!-- Start of Links - first link must be a non-inertial link -->
  
  <link name="base_link"></link>
  
  <link name='base_footprint'></link> 
  
  <link name="chassis">  
  		<collision name="chassis_collision">
     <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="file://$(find mobile_robotic_course_assessment_task_2023)/meshes/AE86_body_origin_reset.stl" scale="0.5 0.5 0.5"/>
      </geometry>
    </collision>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="file://$(find mobile_robotic_course_assessment_task_2023)/meshes/AE86_body_origin_reset.stl" scale="0.5 0.5 0.5"/>
      </geometry>
      <material name="white"/>
    </visual>
  </link>   
    
  
  <link name="castor">
        <inertial>
            <mass value=".1"/>
            <inertia ixx="0.004" ixy="0.0" ixz="0.0" iyy="0.004" iyz="0.0" izz="0.002"/>
        </inertial>
        <collision name="castor">
            <geometry>
                <sphere radius=".06" />
            </geometry>
        </collision>              
        <visual name="castor">
            <geometry>
                <sphere radius=".06" />
            </geometry>
        </visual>
    </link>     
  
  <link name="front_right_wheel">
    <inertial>
      <mass value="0.5"/>
      <inertia ixx="0.004" ixy="0.0" ixz="0.0" iyy="0.004" iyz="0.0" izz="0.002"/>
    </inertial>
    
   
    <visual name="front_right_wheel_visual">
      <geometry>
        <mesh filename="file://$(find mobile_robotic_course_assessment_task_2023)/meshes/AE86_wheel_origin_reset.stl" scale="0.5 0.5 0.5"/>
      </geometry>
      <material name="black"/>
    </visual>
  </link>
  
  <link name="front_left_wheel">
    <inertial>
      <mass value="0.5"/>
      <inertia ixx="0.004" ixy="0.0" ixz="0.0" iyy="0.004" iyz="0.0" izz="0.002"/>
    </inertial>
    
    <visual name="front_left_wheel_visual">
      <geometry>
        <mesh filename="file://$(find mobile_robotic_course_assessment_task_2023)/meshes/AE86_wheel_origin_reset.stl" scale="0.5 0.5 0.5"/>
      </geometry>
      <material name="black"/>
    </visual>
  </link>
  
  <link name="rear_right_wheel">
    <inertial>
      <mass value="0.5"/>
      <inertia ixx="0.004" ixy="0.0" ixz="0.0" iyy="0.004" iyz="0.0" izz="0.002"/>
    </inertial>
    <collision name="rear_right_wheel_collision">
    			<origin xyz="0 0 0" rpy="1.57 0 0"/>
      <geometry>
        <cylinder radius=".06" length=".05"/>
      </geometry>
    </collision>
    <visual name="rear_right_wheel_visual">
      <geometry>
        <mesh filename="file://$(find mobile_robotic_course_assessment_task_2023)/meshes/AE86_wheel_origin_reset.stl" scale="0.5 0.5 0.5"/>
      </geometry>
      <material name="black"/>
    </visual>
  </link>
  
  <link name="rear_left_wheel">
    <inertial>
      <mass value="0.5"/>
      <inertia ixx="0.004" ixy="0.0" ixz="0.0" iyy="0.004" iyz="0.0" izz="0.002"/>
    </inertial>
    <collision name="rear_left_wheel_collision">
    <origin xyz="0 0 0" rpy="1.57 0 0"/>
      <geometry>
        <cylinder radius=".06" length=".05"/>
      </geometry>
    </collision>
    <visual name="rear_left_wheel_visual">
      <geometry>
        <mesh filename="file://$(find mobile_robotic_course_assessment_task_2023)/meshes/AE86_wheel_origin_reset.stl" scale="0.5 0.5 0.5"/>
      </geometry>
      <material name="black"/>
    </visual>
  </link>
  
  <!-- Hokuyo Laser -->
  
  <link name="hokuyo_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.07 0.07 0.07"/>
      </geometry>
    </collision>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="file://$(find mobile_robotic_course_assessment_task_2023)/meshes/hokuyo.dae"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="1e-5"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
  </link>
  
  <!-- libgazebo_ros_camera Link - forward facing camera -->
  <link name="camera_point_link">
    <collision>
      <origin xyz="0 0 0.3" rpy="0 0 0"/>
      <geometry>
    <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>
    
    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>	
<!-- END of Link declaration -->
  
  <!-- Start of Joints - connecting all links together -->
  
  <joint name="1st_joint" type="fixed">
    <parent link="base_link"/>
    <child link="chassis"/>
    <origin xyz="0 0 0"/>
  </joint>
  
      <joint name="jointA" type="fixed">
        <parent link="base_link"/>
        <child link="base_footprint"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <axis xyz="0 1 0"/>
        <dynamics damping="0.7"/>
    </joint>
  
  <joint name="castor_joint" type="fixed">
        <parent link="chassis"/>
        <child link="castor"/>
        <origin xyz=".15 0 0.0" rpy="0 0 0"/>
        <axis xyz="0 1 0"/>
        <dynamics damping="0.7"/>
    </joint>
  
  <joint type="fixed" name="front_wheel_right_joint">
    <parent link="chassis"/>
    <child link="front_right_wheel"/>
    <origin xyz="0.2175 -0.135 0.005" rpy="0 0 0"/>
  </joint>
  
  <joint type="fixed" name="front_wheel_left_joint">
    <parent link="chassis"/>
    <child link="front_left_wheel"/>
    <origin xyz="0.2175 0.135 0.005" rpy="0 0 3.1414"/>
  </joint>
  
  <joint type="continuous" name="rear_wheel_right_joint">
    <parent link="chassis"/>
    <child link="rear_right_wheel"/>
    <origin xyz="-0.2325 -0.135 0" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
    <calibration rising="0.0"/>
    <dynamics damping="0.0" friction="0.0"/>
    <limit effort="30" velocity="2.0"/>
    <safety_controller k_velocity="10" k_position="15" soft_lower_limit="-2.0" soft_upper_limit="0.5"/>
  </joint>
  
  <joint type="continuous" name="rear_wheel_left_joint">
    <parent link="chassis"/>
    <child link="rear_left_wheel"/>
    <origin xyz="-0.2325 0.135 0" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
    <calibration rising="0.0"/>
    <dynamics damping="0.0" friction="0.0"/>
    <limit effort="30" velocity="2.0"/>
    <safety_controller k_velocity="10" k_position="15" soft_lower_limit="-2.0" soft_upper_limit="0.5"/>
  </joint>
  
  <joint name="hokuyo_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <origin xyz="-0.1 0 0.225" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="hokuyo_link"/>
    <dynamics damping="0.7"/>
  </joint>
  
  
  <joint name="camera_joint" type="fixed">
        <axis xyz="0 1 0" />
        <origin xyz="0.25 0 .2" rpy="0 0 0"/>
        <parent link="base_link"/>
        <child link="camera_point_link"/>
        <dynamics damping="0.7"/>
  </joint>
  
  <!-- Transmissions are where the ros_controller interacts -->
  
  <ros2_control name="GazeboSystem" type="system">
    <hardware>
      <plugin>gazebo_ros2_control/GazeboSystem</plugin>
    </hardware>
    
    <joint name="rear_wheel_right_joint">
      <command_interface name="velocity">
        <param name="min">-1</param>
        <param name="max">1</param>
      </command_interface>
      <state_interface name="position">
        <param name="initial_value">0.0</param>
      </state_interface>
      <state_interface name="velocity">
        <param name="initial_value">0.0</param>
      </state_interface>
    </joint>
    
    <joint name="rear_wheel_left_joint">
      <command_interface name="velocity">
        <param name="min">-1</param>
        <param name="max">1</param>
      </command_interface>
      <state_interface name="position">
        <param name="initial_value">0.0</param>
      </state_interface>
      <state_interface name="velocity">
        <param name="initial_value">0.0</param>
      </state_interface>
    </joint>
  </ros2_control>
  
  <!-- Joint state publisher -->
  
  <gazebo>
    <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
      <parameters>$(find mobile_robotic_course_assessment_task_2023)/config/simple_diff_drive_v2.yaml</parameters>
    </plugin>
  </gazebo>
  
  <!-- Gazebo references -->  
  
  <gazebo reference="chassis">
    <material>Gazebo/Grey</material>
    <mu1>0.01</mu1>
    <mu2>0.01</mu2>
    <fdir1>0.000000 0.000000 1.000000</fdir1>
    <slip1>1.000000</slip1>
    <slip2>1.000000</slip2>
  </gazebo>
  
  <gazebo reference="front_right_wheel">
    <material>Gazebo/FlatBlack</material>
    <mu1>.01</mu1>
    <mu2>.01</mu2>
    <fdir1>0.000000 0.000000 0.000000</fdir1>
    <slip1>1.000000</slip1>
    <slip2>1.000000</slip2>
  </gazebo>
  
  <gazebo reference="front_left_wheel">
    <material>Gazebo/FlatBlack</material>
    <mu1>.01</mu1>
    <mu2>.01</mu2>
    <fdir1>0.000000 0.000000 0.000000</fdir1>
    <slip1>1.000000</slip1>
    <slip2>1.000000</slip2>
  </gazebo>
  
  <gazebo reference="rear_right_wheel">
    <material>Gazebo/FlatBlack</material>
    <mu1>100000</mu1>
    <mu2>100000</mu2>
    <fdir1>0.000000 0.000000 1.000000</fdir1>
    <slip1>0.000000</slip1>
    <slip2>0.000000</slip2>
  </gazebo>
  
  <gazebo reference="rear_left_wheel">
    <material>Gazebo/FlatBlack</material>
    <mu1>100000</mu1>
    <mu2>100000</mu2>
    <fdir1>0.000000 0.000000 1.000000</fdir1>
    <slip1>0.000000</slip1>
    <slip2>0.000000</slip2>
  </gazebo>
  
  <gazebo reference="castor">
  	<material>Gazebo/Blue</material>
    	<mu1>.01</mu1>
    	<mu2>.01</mu2>  	
        <fdir1>0.000000 0.000000 0.000000</fdir1>
        <slip1>1.000000</slip1>
        <slip2>1.000000</slip2>     	
  </gazebo>
  
    <gazebo reference="camera_point_link">
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <pose>0 0 0 0 0 0</pose>
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
	  <type>gaussian</type>
	  <!-- Noise is sampled independently per pixel on each frame.
	  That pixel’s noise value is added to each of its color
	  channels, which at that point lie in the range [0,1]. -->
	  <mean>0.0</mean>
	  <stddev>0.007</stddev>
	</noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
      <ros>
        <!--namespace>custom_ns</namespace-->
        <remapping>image_raw:=custom_img</remapping>
        <!--remapping>camera_info:=custom_info</remapping-->
      </ros>      
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_point_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  
  <gazebo reference="hokuyo_link">
    <sensor name="lidar" type="ray">
      <pose>0.215 0 0.215 0 0 0</pose>
      <always_on>true</always_on>
      <visualize>true</visualize>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1.00000</resolution>
            <min_angle>0.000000</min_angle>
            <max_angle>6.280000</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.120000</min>
          <max>13.5</max>
          <resolution>0.015000</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.001</stddev>
        </noise>
      </ray>
      <plugin name="scan" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <remapping>~/out:=scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>hokuyo_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>

</robot>


